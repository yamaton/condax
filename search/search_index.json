{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Condax (forked)","text":"<p>Condax is inspired by the excellent pipx, and attempts to do something similar, just using conda instead of pip.</p> <p>This allows you to install any application packaged with conda instead of just the ones  written in python.</p>"},{"location":"#quickstart","title":"Quickstart","text":""},{"location":"#installation","title":"Installation","text":"<pre><code>&gt; pip install git+https://github.com/yamaton/condax\n&gt; condax ensure-path\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>Installing an app</p> <pre><code>condax install gh\ngh --help\n</code></pre> <p>List installed apps</p> <pre><code>condax list\n</code></pre> <p>Removing tools</p> <pre><code>condax remove gh\n</code></pre> <p>Updating tools</p> <pre><code>condax update gh\n</code></pre> <p>Or all of them at once</p> <pre><code>condax update --all\n</code></pre>"},{"location":"changelog/","title":"Change Log","text":""},{"location":"changelog/#112-2023-11-12","title":"1.1.2 (2023-11-12)","text":"<ul> <li>Clean up every 10 packages during <code>condax import</code></li> <li>Exclude executables that start with '.' or '_'</li> </ul>"},{"location":"commands/","title":"List of all commands and subcommands","text":""},{"location":"commands/#condax-ensure-path","title":"<code>condax ensure-path</code>","text":"<p>Ensures that the path that condax installs executable links into has been added to the user's $PATH.</p> <pre><code>condax ensure-path\n</code></pre>"},{"location":"commands/#condax-install","title":"<code>condax install</code>","text":"<p>Installs a package with condax and add it to the user path.</p> <p>Presently only the latest version of a given package can be installed.</p> <pre><code>condax install PACKAGE\n</code></pre> <p><code>condax</code> also supports using a non-standard set of channels to install a given package.  These are passed onto conda as expected</p> <pre><code>condax install -c HIGHEST_PRIORITY_CHANNEL -c OTHER_CHANNEL -c defaults PACKAGE\n</code></pre>"},{"location":"commands/#condax-uninstall","title":"<code>condax uninstall</code>","text":"<p>Uninstall an already installed package.  This will also remove the conda environment that was created for that package.</p> <pre><code>condax uninstall PACKAGE\n</code></pre>"},{"location":"commands/#condax-update","title":"<code>condax update</code>","text":"<p>This will attempt to update the environment for a given package.  In the unlikely event that this fails, you can also just remove and readd the package.</p> <pre><code>condax update PACKAGE\n</code></pre>"},{"location":"config/","title":"Configuration","text":"<p>Condax generally requires very little configuration.</p> <p>Condax will read configuration settings from a <code>~/.config/condax/config.yaml</code> file.</p> <p>This is the default state for this file.</p> <pre><code>prefix_dir: \"~/.local/share/condax/envs\"\nbin_dir: \"~/.local/bin\"\nchannels:\n    - conda-forge\n    - defaults\n</code></pre> <p>Generally the only thing that most user would want to modify is to change the default channels that are used to install libraries from.</p>"},{"location":"contributing/","title":"Contributing","text":"<p>Thanks for your interest in contributing to condax!</p>"},{"location":"contributing/#development-environment","title":"Development environment","text":"<p>To set up a development environment and then activate it, you can use poetry.</p> <pre><code>poetry install\npoetry shell\n</code></pre> <p>From now on it is assumed you are in the development environment.</p>"},{"location":"contributing/#testing-condax-locally","title":"Testing condax locally","text":"<p>In your environmnent run the tests as follows</p> <pre><code>pytest tests\n</code></pre>"},{"location":"contributing/#testing-condax-on-github-actions","title":"Testing condax on Github Actions","text":"<p>When you make a pull request, tests will automatically be run against your code as defined in <code>.github/workflows/pythonpackage.yml</code>.  These tests are run using github actions</p>"},{"location":"contributing/#creating-a-pull-request","title":"Creating a pull request","text":"<p>When making a new pull request please create a news file in the <code>./news</code> directory. You can make a copy of the provided template. This will automatically be merged into the documentation when new releases are made.</p>"},{"location":"contributing/#documentation","title":"Documentation","text":"<p><code>condax</code> autogenerates API documentation, published on github pages.</p>"},{"location":"contributing/#release-new-condax-version","title":"Release New <code>condax</code> Version","text":"<p>To create a new release condax uses rever</p> <pre><code>conda install rever\nrever {new_version_number}\n</code></pre>"},{"location":"how-this-works/","title":"What does this do?","text":"<p>condax works as scripts calling <code>conda run</code>. Specifically,</p> <pre><code>conda run --no-capture-output --prefix &lt;env-directory&gt; '&lt;command-and-arguments&gt;'\n</code></pre> <p>When installing a package <code>condax</code> will</p> <ul> <li>create a conda environment in <code>~/.local/condax/envs/PACKAGE</code></li> <li>identify the binaries/executables that are installed by <code>PACAKGE</code> (not its dependencies)</li> <li>create a shell script or batch file in <code>~/.local/bin</code></li> </ul>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#system-requirements","title":"System Requirements","text":"<p>condax works on macOS and  linux.  Windows may be supported in future depending on user interest.</p> <p>condax does NOT need a preexisting conda installation, though if it can find one it will use it.</p>"},{"location":"installation/#install-using-pip","title":"Install using pip","text":"<p>python 3.7+ with pip AND git is required to install condax.</p> <p>Assuming you have <code>pip</code> and <code>git</code> installed, run:</p> <pre><code>python -m pip install --user git+https://github.com/yamaton/condax\npython -m condax ensure-path\n</code></pre>"},{"location":"installation/#upgrade-condax","title":"Upgrade condax","text":"<pre><code>python -m pip install -U condax\n</code></pre>"},{"location":"installation/#installation-options","title":"Installation Options","text":"<p>condax's default binary location is <code>~/.local/bin</code>. This can be overriden using <code>bin_dir</code> in <code>~/.config/condax/config.yaml</code>.</p> <p>condax's default conda environment location is <code>~/.local/condax/envs</code>. This can be overriden using <code>prefix_dir</code> in <code>~/.config/condax/config.yaml</code>.</p>"}]}